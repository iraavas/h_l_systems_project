version: "3.9"

services:
  database:
    image: postgres:16.1-alpine3.18
    container_name: pg-docker
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-module1}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  app:
    image: iraavas/myproject:latest
    container_name: spring-boot-app
    restart: always
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "8081:8081"
    mem_limit: ${APP_MEM_LIMIT:-512m}
    cpus: ${APP_CPU_LIMIT:-0.5}
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:${DB_PORT:-5432}/${DB_NAME:-module1}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-postgres}
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_SHOW_SQL: ${SHOW_SQL:-false}
      SERVER_TOMCAT_MAX_THREADS: ${TOMCAT_THREADS:-100}
      SPRING_FLYWAY_ENABLED: true
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge

