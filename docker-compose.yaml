services:

  database:
    image: postgres:16
    container_name: pg-docker
    environment:
      POSTGRES_DB: module1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 1
    networks:
      - app-network

  # init-db:
  #   image: python:3.11
  #   container_name: db-init
  #   working_dir: /app
  #   volumes:
  #     - ./initdb:/app
  #   command: python generate_sql.py
  #   depends_on:
  #     - database
  #   networks:
  #     - app-network

  app:
    image: iraavas/myproject:latest
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/module1
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration,filesystem:/flyway/sql
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./initdb/scripts_python:/flyway/sql
    networks:
      - app-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - database
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
